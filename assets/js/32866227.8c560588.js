"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9652],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,h=d["".concat(s,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5077:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return h}});var r,o=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],s={},p="Episode 0: Hello World",c={unversionedId:"python/getting-started/tutorials/season-1-the-local-experience/episode00",id:"python/getting-started/tutorials/season-1-the-local-experience/episode00",title:"Episode 0: Hello World",description:"Metaflow says Hi!",source:"@site/docs/python/getting-started/tutorials/season-1-the-local-experience/episode00.md",sourceDirName:"python/getting-started/tutorials/season-1-the-local-experience",slug:"/python/getting-started/tutorials/season-1-the-local-experience/episode00",permalink:"/python/getting-started/tutorials/season-1-the-local-experience/episode00",editUrl:"https://github.dev/obgibson/metaflow-docs/blob/master/docs/python/getting-started/tutorials/season-1-the-local-experience/episode00.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Season 1: The Local Experience",permalink:"/python/getting-started/tutorials/season-1-the-local-experience/"},next:{title:"Episode 1: Playlist",permalink:"/python/getting-started/tutorials/season-1-the-local-experience/episode01"}},u=[{value:"Metaflow says Hi!",id:"metaflow-says-hi",children:[{value:"Showcasing:",id:"showcasing",children:[],level:4},{value:"To play this episode:",id:"to-play-this-episode",children:[],level:4}],level:2}],d=(r="TutorialsLink",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)}),f={toc:u};function h(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"episode-0-hello-world"},"Episode 0: Hello World"),(0,i.kt)("h2",{id:"metaflow-says-hi"},"Metaflow says Hi!"),(0,i.kt)("p",null,"This flow is a simple linear workflow that verifies your installation by printing out ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("strong",{parentName:"em"},"Metaflow says: Hi!")),"' to the terminal."),(0,i.kt)("p",null,"You can find the tutorial code on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow/tree/master/metaflow/tutorials/00-helloworld"},"GitHub")),(0,i.kt)("h4",{id:"showcasing"},"Showcasing:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../../metaflow/basics"},"Basics of Metaflow.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../../metaflow/basics#what-should-be-a-step"},"Step")," decorator.")),(0,i.kt)("h4",{id:"to-play-this-episode"},"To play this episode:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"cd metaflow-tutorials")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"python 00-helloworld/helloworld.py show")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"python 00-helloworld/helloworld.py run"))),(0,i.kt)(d,{link:"../",mdxType:"TutorialsLink"}))}h.isMDXComponent=!0}}]);